



regext                                                         J. Latour
Internet-Draft                                                      CIRA
Intended status: Standards Track                          O. Gudmundsson
Expires: November 5, 2018                               Cloudflare, Inc.
                                                              P. Wouters
                                                                 Red Hat
                                                             M. Pounsett
                                                  Nimbus Operations Inc.
                                                             May 4, 2018


       Third Party DNS operator to Registrars/Registries Protocol
            draft-ietf-regext-dnsoperator-to-rrr-protocol-05

Abstract

   This document describes a simple protocol that allows a third party
   DNS operator to: establish the initial chain of trust (bootstrap
   DNSSEC) for a delegation; update DS records for a delegation; and,
   remove DS records from a secure delegation.  The DNS operator may do
   these things in a trusted manner, without involving the Registrant
   for each operation.  This same protocol can be used by Registrants to
   maintain their own domains if they wish.

   There are several problems that arise in the standard
   Registrant/Registrar/Registry model when the operator of a zone is
   neither the Registrant nor the Registrar for the delegation.
   Historically the issues have been minor, and limited to difficulty
   guiding the Registrant through the initial changes to the NS records
   for the delegation.  As this is usually a one time activity when the
   operator first takes charge of the zone it has not been treated as a
   serious issue.

   When the domain uses DNSSEC it necessary to make regular (sometimes
   annual) changes to the delegation, updating DS record(s) in order to
   track KSK rollover.  Under the current model this is prone to delays
   and errors, as the Registrant must participate in updates to DS
   records.  Implementation of this protocol at the Registrar and/or
   Registry would eliminate the need for a Registrant who is not
   normally involved in the technical operation of their zone(s) from
   being required to become a participant in order to secure them with
   DNSSEC.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.




Latour, et al.          Expires November 5, 2018                [Page 1]

Internet-Draft                  3-DNS-RRR                       May 2018


   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 5, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Implementation Considerations . . . . . . . . . . . . . .   4
   2.  Notional Conventions  . . . . . . . . . . . . . . . . . . . .   4
     2.1.  Definitions . . . . . . . . . . . . . . . . . . . . . . .   5
     2.2.  RFC2119 Keywords  . . . . . . . . . . . . . . . . . . . .   5
   3.  Process Overview  . . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  Identifying the Registration Entity . . . . . . . . . . .   5
     3.2.  Establishing a Chain of Trust . . . . . . . . . . . . . .   6
     3.3.  Maintaining the Chain of Trust  . . . . . . . . . . . . .   6
     3.4.  Acceptance Processing . . . . . . . . . . . . . . . . . .   7
     3.5.  Bootstrapping DNSSEC  . . . . . . . . . . . . . . . . . .   7
   4.  API Definition  . . . . . . . . . . . . . . . . . . . . . . .   8
     4.1.  Authorization . . . . . . . . . . . . . . . . . . . . . .   8
     4.2.  Authentication  . . . . . . . . . . . . . . . . . . . . .   8
     4.3.  RESTful Resources . . . . . . . . . . . . . . . . . . . .   8
       4.3.1.  CDS resource  . . . . . . . . . . . . . . . . . . . .   9
       4.3.2.  Token resource  . . . . . . . . . . . . . . . . . . .  11
     4.4.  Customized Error Messages . . . . . . . . . . . . . . . .  12
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  12



Latour, et al.          Expires November 5, 2018                [Page 2]

Internet-Draft                  3-DNS-RRR                       May 2018


   6.  IANA Actions  . . . . . . . . . . . . . . . . . . . . . . . .  12
   7.  Internationalization Considerations . . . . . . . . . . . . .  12
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  12
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .  12
     8.2.  Informative References  . . . . . . . . . . . . . . . . .  13
   Appendix A.  Document History . . . . . . . . . . . . . . . . . .  13
     A.1.  regext Version 06 (not yet published) . . . . . . . . . .  13
     A.2.  regext Version 05 . . . . . . . . . . . . . . . . . . . .  14
     A.3.  regext Version 04 . . . . . . . . . . . . . . . . . . . .  14
     A.4.  regext Version 03 . . . . . . . . . . . . . . . . . . . .  15
     A.5.  regext Version 02 . . . . . . . . . . . . . . . . . . . .  15
     A.6.  regext Version 01 . . . . . . . . . . . . . . . . . . . .  15
     A.7.  regext Version 00 . . . . . . . . . . . . . . . . . . . .  15
     A.8.  Version 03  . . . . . . . . . . . . . . . . . . . . . . .  16
     A.9.  Version 02  . . . . . . . . . . . . . . . . . . . . . . .  16
     A.10. Version 01  . . . . . . . . . . . . . . . . . . . . . . .  16
     A.11. Version 00  . . . . . . . . . . . . . . . . . . . . . . .  16
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  16

1.  Introduction

   After a domain has been registered, the DNS operator for the child
   zone on the "primary" DNS servers might be the registrant, the
   registrar, or a third party.  DNS registration systems were
   originally designed around making registrations easy and fast,
   however after registration the complexity of making changes to the
   delegation differs for each of these parties.  The Registrar can make
   changes directly in the Registry systems through some API (typically
   EPP [RFC5730]).  The Registrant is typically limited to using a web
   interface supplied by the Registrar or Reseller, but may be provided
   access to an API by the Registrar or Registry.  Typically, a third
   party DNS Operator must to go through the Registrant to update any
   delegation information.

   Unless the responsible Registration Entity is scanning child zones
   for CDS records in order to bootstrap or update DNSSEC, a third-party
   operator must contact and engage the Registrant in updating DS
   records for the delegation.

   In this case, the existing process can result various failures that
   impact the Registrant's delegation.  New information must be
   communicated to the Registrant, who must submit that information to
   the Registrar.  Often this involves cutting and pasting between email
   and a web interface, which is error prone.  For example, a mistake
   with copy and paste may result in a truncated DS record being
   submitted to the parent zone, which can result in validation
   failures.  Or, a Registrant may miss or ignore email from their DNS
   operator and take no action, halting a key roll.



Latour, et al.          Expires November 5, 2018                [Page 3]

Internet-Draft                  3-DNS-RRR                       May 2018


   Furthermore, involving Registrants in this way does not scale for
   even moderately sized DNS operators.  Tracking thousands (or
   millions) of change requests sent to customers, and following up if
   those changes are not submitted to the Registrar, or are submitted
   with errors, is itself expensive and error prone.  The complexity
   results in either the inability of a DNS operator to implement DNSSEC
   or in validation failures that cause the domain to become unavailable
   to users behind validating resolvers.

   The goal of this document is to create a protocol for establishing a
   secure chain of trust that involves parties not in the traditional
   Registrant/Registrar/Registry (RRR) model, and to reduce the friction
   in maintaining DNSSEC secured delegations in these cases.  It
   describes a REST-based [RFC6690] protocol which can be used to
   establish DNSSEC initial trust (to enable or bootstrap DNSSEC), and
   to trigger maintenance of DS records.

   Note that, while the protocol's intent is to enable a third party DNS
   operator to update a Registrant's zone(s) on the Registrant's behalf,
   it has the beneficial side-effect of enabling a Registrant who
   manages their own DNS to automate their operations, should they wish
   to do so.

1.1.  Implementation Considerations

   In some environments the role of the Registration Entity may be split
   between parties.  For example, in some ccTLD environments Registrants
   may have a Registrar and also deal directly with the Registry on
   occasion.  In such environments it may be necessary for one
   Registration Entity to consider how to notify another of changes made
   to a delegation as a result of implementing this protocol.  This may
   be particularly important in cases where DNSSEC information can be
   set by a Registrar and updated by the Registry.

   As the specifics of the requirements in such an exchange of
   information are dependent on the protocols in use (e.g.  EPP) and the
   details of any agreements between Registrar and Registry, the details
   are out of scope of this document.  The issue is mentioned here
   merely as an indication that the parties involved may need to be
   aware of places that DNSSEC data might be stored outside of the DNS,
   and that these data may need to be updated to prevent future
   conflicts or confusion.

2.  Notional Conventions







Latour, et al.          Expires November 5, 2018                [Page 4]

Internet-Draft                  3-DNS-RRR                       May 2018


2.1.  Definitions

   For the purposes of this draft, a third-party DNS Operator is any DNS
   Operator responsible for a zone, where the operator is neither the
   Registrant nor the Registrar of record for the delegation.

   Uses of "child" and "parent" refer to the relationship between DNS
   zone operators (see [RFC7719] and [I-D.ietf-dnsop-terminology-bis]).
   In this document, unless otherwise noted, the child is the third-
   party DNS operator and the parent is the Registry.

   Use of the term "Registration Entity" in this document may refer to
   any party that engages directly in registration activities with the
   Registrant.  Typically this will be a Reseller or Registrar, but in
   some cases, such as when a Registry directly sells registrations to
   the public, may apply to the Registry.  Even in cases where a
   Registrar is involved, this term may still apply to a Registry if
   that Registry normally accepts DS/DNSKEY updates directly from
   Registrants.

   The CDS and CDNSKEY DNS resource records, having substantially the
   same function but for different record types, are used interchangably
   in this document.  Unless otherwise noted, any use of "CDS" or
   "CDNSKEY" can be assumed to also refer to the other.

2.2.  RFC2119 Keywords

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

3.  Process Overview

3.1.  Identifying the Registration Entity

   As of publication of this document, there has never been a
   standardized or widely deployed method for easily and scalably
   identifying the Registration Entity for a particular registration.

   At this time, WHOIS [RFC3912] is the only widely deployed protocol to
   carry such information, but WHOIS responses are unstructured text,
   and each implementor can lay out its text responses differently.  In
   addition, Registries may include referrals in this unstructured text
   to the WHOIS interfaces of their Registrars, and those Registrar
   WHOIS interface in turn have their own layouts.  This presents a text
   parsing problem which is infeasible to solve.





Latour, et al.          Expires November 5, 2018                [Page 5]

Internet-Draft                  3-DNS-RRR                       May 2018


   RDAP, the successor to WHOIS, described in [RFC7480], solves the
   problems of unstructured responses, and a consistently implemented
   referral system, however at this time RDAP has yet to be deployed at
   most Registries.

   With no current mechanism in place to scalably discover the Registrar
   for a particular registration, the problem of automatic discovery of
   the base URL of the API is considered out of scope of this document.
   The authors recommend standardization of an RDAP extension to obtain
   this information from the Registry.

3.2.  Establishing a Chain of Trust

   After signing the zone, the child DNS Operator needs to upload the DS
   record(s) to the parent.  The child can signal its desire to have
   DNSSEC validation enabled by publishing one of the special DNS
   records CDS and/or CDNSKEY as defined in [RFC7344] and [RFC8078].

   A Registration Entitiy MAY regularly scan the child name servers of
   unsecured delegations for CDS records in order to bootstrap DNSSEC,
   and are advised to do so.  At the time of publication, some ccTLD
   Registries are already doing this.  A Registration Entity that
   regularly scans all child zones under its responsibility (both
   secured and unsecured) for CDS will not require the API described in
   this document.  However, such a Registration Entity should follow the
   guidelines discussed in Section 3.5 below when using CDS to bootstrap
   DNSSEC on a previously unsecured delegation.

   In the case where the Registration Entity is not normally scanning
   child zones for CDS records, the Registration Entity SHOULD implement
   the API from this document, allowing child operators to notify the
   Registration Entity to begin such a scan.

   Once the Registration Entity finds CDS records in a child zone it is
   responsible for, or receives a signal via this API, it SHOULD start
   acceptance processing as described below.

3.3.  Maintaining the Chain of Trust

   Once the secure chain of trust is established, the Registration
   Entity SHOULD regularly scan the child zone for CDS record changes.
   If the Registration Entity implements the protocol described in this
   document, then it SHOULD also accept signals via this protocol to
   immediately check the child zone for CDS records.

   Server implementations of this protocol MAY include rate limiting to
   protect their systems and the systems of child operators from abuse.




Latour, et al.          Expires November 5, 2018                [Page 6]

Internet-Draft                  3-DNS-RRR                       May 2018


   Each parent operator and Registration Entity is responsible for
   developing, implementing, and communicating their DNSSEC maintenance
   policies.

3.4.  Acceptance Processing

   The Registration Entity, upon receiving a signal or detecting through
   polling that the child desires to have its delegation updated, SHOULD
   run a series of tests to ensure that updating the parent zone will
   not create or exacerbate any problems with the child zone.  The basic
   tests SHOULD include:

   o  checks that the child zone is is properly signed as per the
      Registration Entity and parent DNSSEC policies

   o  if updating the DS record, a check to ensure the child CDS RRset
      references a KSK which is present in the child DNSKEY RRset and
      signs the CDS RRset

   o  ensuring all name servers in the apex NS RRset of the child zone
      agree on the apex NS RRset and CDS RRset contents

   The Registration Entity SHOULD NOT make any changes to the DS RRset
   if the child name servers do not agree on the CDS content.

3.5.  Bootstrapping DNSSEC

   A Registration Entity implementing this protocol SHOULD require
   compliance with additional tests in the case of establishing a new
   chain of trust.

   o  The Registration Entity SHOULD check that all child name servers
      respond with a consistent CDS RRset for a number of queries over
      an extended period of time.  Any change in DS response or
      inconsistency between child responses in that time might indicate
      an attempted Man in the Middle (MITM) attack, and SHOULD reset the
      test.  This minimizes the possibility of an attacker spoofing
      responses.  An example of such a policy might be to scan all child
      name servers in the delegation NS RRset every two hours for a
      week.

   o  The Registration Entity SHOULD require all of the child name
      servers in the delegation NS RRset to send the same response to a
      CDS query whether sent over TCP or UDP.

   o  The Registration Entity MAY require the child zone to implement
      zone delegation best practices as described in
      [I-D.wallstrom-dnsop-dns-delegation-requirements].



Latour, et al.          Expires November 5, 2018                [Page 7]

Internet-Draft                  3-DNS-RRR                       May 2018


   o  The Registration Entity MAY require the child operator to prove
      they can add data to the zone, for example by publishing a
      particular token.  See Section 4.3.2 below.

4.  API Definition

4.1.  Authorization

   Clients may be denied access to change the DS records for domains
   that are subject to certain registration-related locks (HTTP Status
   code 401).  For example, the Registry Lock is a mechanism provided by
   certain Registries or Registrars that prevents domain hijacking by
   ensuring no attributes of the domain are changeable, and no transfer
   or deletion transactions can be processed against the domain name
   without manual intervention.

4.2.  Authentication

   The API does not impose any unique server authentication
   requirements.  There is a potential risk for a Man in the Middle
   style Denial of Service attack against a client, where an attacker
   could impersonate the server and block a client's signal from
   reaching the intended recipient.  Therefore, the API MUST be provided
   over some transport which allows the client to reliably identify
   whether they have connected to the correct server, such TLS-protected
   transport (i.e.  HTTPS) or VPN.

   Client authentication is considered out of scope of this document.
   The publication of CDS records in the child zone is an indication
   that the child operator intends to perform DS-record-updating
   activities (add/delete) in the parent zone.  Since this protocol is
   simply a signal to the Registration Entity that they should examine
   the child zone for such intentions, additional authentication of the
   client making the request is considered unnecessary.

   A Registration Entity MAY implement their own policy to protect
   access to the API, such as with IP white listing, client TLS
   certificates, etc..  The Registration Entity SHOULD take steps to
   ensure that their implementation of this protocol does not open up an
   avenue for a denial of service attack against the systems of the
   Registration Entity, the Registry, or the child operator.

4.3.  RESTful Resources

   In the following text, "{domain}" is the child zone to be operated
   on.





Latour, et al.          Expires November 5, 2018                [Page 8]

Internet-Draft                  3-DNS-RRR                       May 2018


4.3.1.  CDS resource

   Path: /domains/{domain}/cds

4.3.1.1.  Establishing Initial Trust (Enabling DNSSEC)

4.3.1.1.1.  Request

   Syntax: POST /domains/{domain}/cds

   Request that an initial set of DS records based on the CDS record in
   the child zone be inserted into the Registry and the parent zone upon
   the successful completion of the request.  If there are multiple CDS
   records in the CDS RRset, multiple DS records will be added.

   The body of the POST SHOULD be empty, however server implementations
   SHOULD NOT reject nonempty requests.

4.3.1.1.2.  Response

   o  HTTP Status code 201 indicates a success.

   o  HTTP Status code 400 indicates a failure due to validation.

   o  HTTP Status code 401 indicates an unauthorized resource access.

   o  HTTP Status code 403 indicates a failure due to an invalid
      challenge token.

   o  HTTP Status code 404 indicates the domain does not exist.

   o  HTTP Status code 412 indicates the delegation already has a DS
      RRset.

   o  HTTP Status code 429 indicates the client has been rate-limited.

   o  HTTP Status code 500 indicates a failure due to unforeseeable
      reasons.

   This request is for setting up initial trust in the delegation.  The
   Registration Entity SHOULD return a status code 412 if it already has
   a DS RRset for the child zone.

   Upon receipt of a 403 response the child operator SHOULD issue a POST
   for the "token" resource to fetch a challenge token to insert into
   the zone.





Latour, et al.          Expires November 5, 2018                [Page 9]

Internet-Draft                  3-DNS-RRR                       May 2018


4.3.1.2.  Removing DS Records

4.3.1.2.1.  Request

   Syntax: DELETE /domains/{domain}/cds

   Request that the Registration Entity check for a null CDS or CDNSKEY
   record in the child zone, indicating a request that the entire DS
   RRset be removed.  This will make the delegation insecure.

4.3.1.2.2.  Response

   o  HTTP Status code 200 indicates a success.

   o  HTTP Status code 400 indicates a failure due to validation.

   o  HTTP Status code 401 indicates an unauthorized resource access.

   o  HTTP Status code 404 indicates the domain does not exist.

   o  HTTP Status code 412 indicates the parent does not have a DS RRset

   o  HTTP Status code 429 indicates the client has been rate-limited.

   o  HTTP Status code 500 indicates a failure due to unforeseeable
      reasons.

4.3.1.3.  Modifying DS Records

4.3.1.3.1.  Request

   Syntax: PUT /domains/{domain}/cds

   Request that the Registration Entity modify the DS RRset based on the
   CDS available in the child zone.  As a result of this request the
   Registration Entity SHOULD add or delete DS or DNSKEY records as
   indicated by the CDS RRset, but MUST NOT delete the entire DS RRset.

4.3.1.3.2.  Response

   o  HTTP Status code 200 indicates a success.

   o  HTTP Status code 400 indicates a failure due to validation.

   o  HTTP Status code 401 indicates an unauthorized resource access.

   o  HTTP Status code 404 indicates the domain does not exist.




Latour, et al.          Expires November 5, 2018               [Page 10]

Internet-Draft                  3-DNS-RRR                       May 2018


   o  HTTP Status code 412 indicates the parent does not have a DS RRset

   o  HTTP Status code 429 indicates the client has been rate-limited.

   o  HTTP Status code 500 indicates a failure due to unforeseeable
      reasons.

4.3.2.  Token resource

   Path: /domains/{domain}/token

4.3.2.1.  Establish Initial Trust with Challenge

4.3.2.1.1.  Request

   Syntax: GET /domains/{domain}/token

   The DNSSEC policy of the Registration Entity may require proof that
   the DNS Operator is in control of the domain.  The token API call
   returns a random token to be included as a TXT record for the
   _delegate.@ domain name (where @ is the apex of the child zone) prior
   establishing the DNSSEC initial trust.  This is an additional trust
   control mechanism to establish the initial chain of trust.

   Once the child operator has received a token, it SHOULD be inserted
   in the zone and the operator SHOULD proceed with a POST of the cds
   resource.

   The Registration Entity MAY expire the token after a reasonable
   period.  The Registration Entity SHOULD document an explanation of
   whether and when tokens are expired in their DNSSEC policy.

   Note that the _delegate TXT record is publicly visible and therefore
   cannot be treated as a secret token.

4.3.2.1.2.  Response

   o  HTTP Status code 200 indicates a success.  A token is included in
      the body of the response, as a valid TXT record

   o  HTTP Status code 404 indicates the domain does not exist.

   o  HTTP Status code 500 indicates a failure due to unforeseeable
      reasons.







Latour, et al.          Expires November 5, 2018               [Page 11]

Internet-Draft                  3-DNS-RRR                       May 2018


4.4.  Customized Error Messages

   The Registration Entity MAY provide a customized error message in the
   response body in addition to the HTTP status code defined in the
   previous section.  This response MAY include an identifying number/
   string that can be used to track the request.

5.  Security Considerations

   Using CDS to bootstrap trust poses inherent risks.  The issues
   surrounding this practice are well described in the Security
   Considerations section of [RFC8078].  Since this protocol simply adds
   a layer of signalling on top of the processes described in that
   document, there are no new Security Considerations posed by using
   this protocol in combination with CDS.

6.  IANA Actions

   This document has no actions for IANA

7.  Internationalization Considerations

   This protocol is designed for machine to machine communications.
   Clients and servers SHOULD use punycode [RFC5891] when operating on
   internationalized domain names.

8.  References

8.1.  Normative References

   [RFC5891]  Klensin, J., "Internationalized Domain Names in
              Applications (IDNA): Protocol", RFC 5891,
              DOI 10.17487/RFC5891, August 2010,
              <https://www.rfc-editor.org/info/rfc5891>.

   [RFC6690]  Shelby, Z., "Constrained RESTful Environments (CoRE) Link
              Format", RFC 6690, DOI 10.17487/RFC6690, August 2012,
              <https://www.rfc-editor.org/info/rfc6690>.

   [RFC7344]  Kumari, W., Gudmundsson, O., and G. Barwood, "Automating
              DNSSEC Delegation Trust Maintenance", RFC 7344,
              DOI 10.17487/RFC7344, September 2014,
              <https://www.rfc-editor.org/info/rfc7344>.

   [RFC8078]  Gudmundsson, O. and P. Wouters, "Managing DS Records from
              the Parent via CDS/CDNSKEY", RFC 8078,
              DOI 10.17487/RFC8078, March 2017,
              <https://www.rfc-editor.org/info/rfc8078>.



Latour, et al.          Expires November 5, 2018               [Page 12]

Internet-Draft                  3-DNS-RRR                       May 2018


8.2.  Informative References

   [I-D.ietf-dnsop-terminology-bis]
              Hoffman, P., Sullivan, A., and K. Fujiwara, "DNS
              Terminology", draft-ietf-dnsop-terminology-bis-10 (work in
              progress), April 2018.

   [I-D.wallstrom-dnsop-dns-delegation-requirements]
              Wallstrom, P. and J. Schlyter, "DNS Delegation
              Requirements", draft-wallstrom-dnsop-dns-delegation-
              requirements-03 (work in progress), October 2016.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3912]  Daigle, L., "WHOIS Protocol Specification", RFC 3912,
              DOI 10.17487/RFC3912, September 2004,
              <https://www.rfc-editor.org/info/rfc3912>.

   [RFC5730]  Hollenbeck, S., "Extensible Provisioning Protocol (EPP)",
              STD 69, RFC 5730, DOI 10.17487/RFC5730, August 2009,
              <https://www.rfc-editor.org/info/rfc5730>.

   [RFC7480]  Newton, A., Ellacott, B., and N. Kong, "HTTP Usage in the
              Registration Data Access Protocol (RDAP)", RFC 7480,
              DOI 10.17487/RFC7480, March 2015,
              <https://www.rfc-editor.org/info/rfc7480>.

   [RFC7719]  Hoffman, P., Sullivan, A., and K. Fujiwara, "DNS
              Terminology", RFC 7719, DOI 10.17487/RFC7719, December
              2015, <https://www.rfc-editor.org/info/rfc7719>.

Appendix A.  Document History

A.1.  regext Version 06 (not yet published)

   o  more grammar and spelling nits

   o  clarify language indicating that a registrant may be a user of
      this protocol

   o  try to make it clearer that the DNS operator role may be one of
      several different parties, without blurring the line between role
      and party

   o  restructure the abstract to lead with the goals



Latour, et al.          Expires November 5, 2018               [Page 13]

Internet-Draft                  3-DNS-RRR                       May 2018


   o  better address potential issues with the status quo in the
      Introduction

   o  removing plural Registration Entity references

   o  clarify the intent of the authentication requirements

   o  clarify the text about not having secrets in the _delegate TXT
      record.

   o  since all security considerations were related to trust
      bootstrapping, offload security considerations to RFC8078

   o  fix punycode reference to point to the correct (current) RFC

   o  added Implementation Considerations subsection

   o  change HTTP response 409 to 412 for consistency

   o  remove synchronous vs. asynchronous text

   o  rephrase registry lock text to make it an example rather than an
      exhaustive list of why a 401 may be returned

   o  for above, add Authorization subsection

A.2.  regext Version 05

   o  new version to keep the draft alive

   o  updating author organization

A.3.  regext Version 04

   o  changed uses of Registrar to Registration Entity and updated
      definitions to improve clarity

   o  adding note about CDS/CDNSKEY interchangability in this document

   o  added advice to scan all delegations (including insecure
      delegations) for CDS in order to bootstrap or update DNSSEC

   o  removed "Other Delegation Maintenance" section, since we decided a
      while ago not to use this to update NS







Latour, et al.          Expires November 5, 2018               [Page 14]

Internet-Draft                  3-DNS-RRR                       May 2018


A.4.  regext Version 03

   o  simplify abstract

   o  move all justification text to Intro

   o  added HTTP response codes for rate limiting (429), missing DS
      RRsets (412)

   o  expanded on Internationalization Considerations

   o  corrected informative/normative document references

   o  clarify parent/Registrar references in the draft

   o  general spelling/grammar/style cleanup

   o  removed references to NS and glue maintenance

   o  clarify content of POST body for 'cds' resource

   o  change verb for obtaining a 'token' to GET

   o  Updated reference to RFC8078

A.5.  regext Version 02

   o  Clarified based on comments and questions from early implementors
      (JL)

   o  Text edits and clarifications.

A.6.  regext Version 01

   o  Rewrote Abstract and Into (MP)

   o  Introduced code 401 when changes are not allowed

   o  Text edits and clarifications.

A.7.  regext Version 00

   o  Working group document same as 03, just track changed to standard








Latour, et al.          Expires November 5, 2018               [Page 15]

Internet-Draft                  3-DNS-RRR                       May 2018


A.8.  Version 03

   o  Clarified based on comments and questions from early implementors

A.9.  Version 02

   o  Reflected comments on mailing lists

A.10.  Version 01

   o  This version adds a full REST definition this is based on
      suggestions from Jakob Schlyter.

A.11.  Version 00

   o  First rough version

Authors' Addresses

   Jacques Latour
   CIRA
   Ottawa, ON

   Email: jacques.latour@cira.ca


   Olafur Gudmundsson
   Cloudflare, Inc.
   San Francisco, CA

   Email: olafur+ietf@cloudflare.com


   Paul Wouters
   Red Hat
   Toronto, ON

   Email: paul@nohats.ca


   Matthew Pounsett
   Nimbus Operations Inc.
   Toronto, ON

   Email: matt@conundrum.com






Latour, et al.          Expires November 5, 2018               [Page 16]
